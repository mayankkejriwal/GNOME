Updates from v1-1 to v1-2:

--In location_states, we have changed 'class' to 'loc_class'. The reason is (and we should have realized it earlier) that class is a reserved word in Python. 

--we have added a new field called go_increment. This is the amount you get when you pass go each time. 

--has_get_out_of_jail card has been replaced with its community chest and chance equivalents. The reason is that a player can have two of these at the same time (one from each of the card categories), and we need to be able to track this (e.g., if the player uses the chance card, it should go back to the chance pile. Unlike the other cards, which get used and replaced immediately in the pile, this one is something the player can hold on to for a while, which complicates matters)

--another change in location is that we now keep track of who owns the location WITHIN the location itself, and also how many houses/hotels are on that location. We decided to make this change to avoid too many function calls/indirections when calculating rent. This means that under 'assets' in player_states, we have removed hotels and houses; now, we only track which properties the player owns, along with an derivatory data structure that tracks whether the players possesses full color sets. In turn, this means the 'assets' has been considerably simplified, since we only need to keep track of the names of the properties the player owns. 

--chance cards were previously missing from the schema due to a glitch in the JSON generation (these have now been added)

--in chance/community chest, we have added a new card class called 'contingent_cash_from_bank' that was previously in the class positive/negative_cash_from_bank. The reason is that the positive/negative class always involves a fixed amount, while contingent cash requires a function calculation (e.g., calculating street repair cost), which makes the structure of the class different. 

--name of 'go_to_nearest_railroad_pay_double_1' card is now just 'go_to_nearest_railroad_pay_double'. Note that the 'name' of a card does not have to be unique since there could be multiple identical cards (such as in this case)

--we've added skip_turn and conclude_turn to out_of_turn action choices. skip_turn in this context just means that we won't take action on out_of_turn (at least right now). conclude_turn means that we're done with whatever actions we wanted to take. conclude_turn must follow at least one action, otherwise skip_turn should be invoked. Only when all out_of_turn players have skipped the turn and the current player rolls the die will the die be rolled, and the post die roll phase begin. 

--we have simplified player_states since it contained redundant information. Now it refers to a single dictionary.

--currently, if you pick up a card and you owe money, and you don't have cash to cover it, you will lose the game (i.e. you won't be able to mortgage or sell properties). We are working on correcting this problem. The real world analog is that you need this money immediately, whereas mortgages and selling are illiquid transactions that have lag before the money is in your pocket. 

--there is a small chance my current cash might become negative even if it's not my turn (if another player collects from me due to a card draw, and I have low cash). Because the chances are so small of this happening, we do not force that player to take action just yet but once it's his turn, he'll have to deal with the negative cash before he can conclude his turn (or declare bankruptcy)

--the 'player' objects now have some additional fields that will be useful for keeping track of the game state. 


REMINDERS:

--it is possible to sell a mortgaged property